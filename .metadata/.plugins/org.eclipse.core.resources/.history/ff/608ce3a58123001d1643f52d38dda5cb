package beTheHeroAPItesting;

import org.testng.Assert;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;
import static io.restassured.RestAssured.*;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.response.ValidatableResponse;

public class BetheHero {
	String userid;
	Integer usecaseid1;
	Integer usecaseid2;
	Integer profileUseCaseID1;
	String filePath="C:\\Users\\QQA0431\\eclipse-workspace\\Ra\\src\\test\\resources\\config.properties";
	
	
	//String baseUri="http://192.168.3.230:3333";
	
	@BeforeTest
	public void baseUriutility() throws IOException  {
		Properties prop=new Properties();
		FileInputStream fi=new FileInputStream(filePath);
		prop.load(fi);
		String baseUri = prop.getProperty("baseURI2");
		RestAssured.baseURI=baseUri;
		
		
		
	}
	
	
	@Test(priority=1,dataProvider="PostData",dataProviderClass=DataProviderClass.class)
	public void RegisterRequest(String name,String email, String whatsapp, String city, String uf) throws Exception {
		//RestAssured.baseURI="http://192.168.3.230:3333";
		
				Response res = given().log().ifValidationFails()
				.headers("Content-Type", "application/json")
				.body(RequestBodyUtils.postBodyFromDP(name, email, whatsapp, city, uf))
		        .when().post("/ongs")
		        .then()
		        .log().ifValidationFails().assertThat()
		        .statusCode(200)
		        .extract().response();
				Assert.assertEquals(res.statusCode(), 200);
				System.out.println("TestCase Success");
				
				String response = res.asString();
				System.out.println(response);
				
	
	
		
	     userid = JsonPathUtils.jsonPath(response, "id");
		System.out.println(userid);
		
		
		
		
	}
	/*
	@Test(priority=2)
	public void sessions() {
		String res = given().log().all().body(RequestBodyUtils.login(id)).when().post("/sessions").then().log().all().assertThat()
        .statusCode(200)
        .extract().response().asString();
		System.out.println(res);
	}*/
	
	@Test(priority=3,dependsOnMethods= {"RegisterRequest"})
	public void ApplicationDetails() throws Exception {
		Response res =
				given()
		       .when().get("/ongs/"+userid+"")
		       .then()
		       .assertThat()
		       .statusCode(200)
		       .extract().response();
		String response = res.asString();
		
		System.out.println(response);
		//DataBaseClass.getUserDetails("select * from users where id="+userid+"");
		
		String actualname = JsonPathUtils.jsonPath(response, "name[0]");
		Assert.assertEquals(actualname, "vikramaghil");
		
		//String databaseusername = DataBaseClass.getName("select name from users where id="+userid+"");
		String databaseusername = DataBaseClass.getName("select name from users where id='3446'");
		System.out.println(databaseusername);
		//Assert.assertEquals(actualname, databaseusername);
		
		Assert.assertEquals(res.statusCode(), 200);
		System.out.println("TestCase Success");
		
	}
	/*
	
	@Test(priority=4, dataProvider="updateData",dataProviderClass=DataProviderClass.class,dependsOnMethods= {"RegisterRequest"})
	public void updateDetails(String name,String email, String whatsapp, String city, String uf) throws Exception {
		String response = 
				 given()
				.headers("Content-Type","application/json")
				.body(RequestBodyUtils.updateBodyFromDP(name, email, whatsapp, city, uf))
				.auth().basic("id", userid)
		        .when()
		        .put("/ongs/"+userid+"")
		        .then()
		        .assertThat().statusCode(200).extract().response().asString();
		
		String updatedid = JsonPathUtils.jsonPath(response, "id");
		String updatedName = JsonPathUtils.jsonPath(response, "name");
		Assert.assertEquals(userid, updatedid);
		//DataBaseClass.getId("select id from users where name='vikramb'");
		int databaseid = DataBaseClass.getId("select id from users where name="+updatedName+"");
		Assert.assertEquals(updatedid,databaseid);	
		System.out.println(response);
		System.out.println("TestCase4 Success");
	}
	
	
	
	@Test(priority=5, dataProvider="postCaseData", dataProviderClass=DataProviderClass.class,dependsOnMethods= {"RegisterRequest","updateDetails"})
	public void registerNewRequest1(String title, String description, String value) throws Exception {
		Response res = 
				given()
				.headers("Content-Type", "application/json")
				.body(RequestBodyUtils.registernewBodyFromDP(title, description, value))
				.headers("authorization",userid)
		        .when().post("/incidents")
		        .then()
		        .assertThat().statusCode(200).extract().response();
		Assert.assertEquals(res.statusCode(), 200);
		
		String response = res.asString();
		      usecaseid1 = JsonPathUtils.jsonPathUseCase(response, "id");    
		 String title1 = JsonPathUtils.jsonPath(response, "title");
		 int databasecaseUserId1 = DataBaseClass.getCaseUserId("select userid from cases where title="+title1+"");
		 Assert.assertEquals(usecaseid1, databasecaseUserId1);
		 System.out.println("usecaseid1: "+usecaseid1);
		 System.out.println("databasecaseuserid1: "+databasecaseUserId1);
		 
		 System.out.println("TestCase5 Success");
	  
		
		
	}
	@Test(priority=6, dataProvider="updateCaseData",dataProviderClass=DataProviderClass.class,dependsOnMethods= {"RegisterRequest","updateDetails"})
	public void registerNewRequest2(String title, String description, String value) throws Exception {
		Response res = 
				given()
				.headers("Content-Type", "application/json")
				.body(RequestBodyUtils.registernewBodyFromDP(title, description, value))
				.headers("authorization",userid)
		        .when().post("/incidents")
		        .then()
		        .assertThat().statusCode(200).extract().response();
		Assert.assertEquals(res.statusCode(), 200);
		
		String response = res.asString();
		  usecaseid2 = JsonPathUtils.jsonPathUseCase(response, "id");
		  String title2 = JsonPathUtils.jsonPath(response, "title");
		 System.out.println(usecaseid2);
		 int databasecaseUserId2 = DataBaseClass.getCaseUserId("select userid from cases where title="+title2+"");
		 Assert.assertEquals(usecaseid2, databasecaseUserId2);
		 System.out.println("usecaseid2: "+usecaseid2);
		 System.out.println("databasecaseuserid: "+databasecaseUserId2);
		 System.out.println("TestCase6 Success");
	}
	@Test(priority=7,dependsOnMethods= {"RegisterRequest"})
	public void profileDetails() {
		Response res = 
				given()
				.headers("authorization",userid)
		        .when().get("/profile")
		        .then()
		        .log().all().assertThat()
		        .statusCode(200).extract()
		        .response();
		
		String response = res.asString();
		System.out.println(response);
		// int profileUseCaseID1 = JsonPathUtils.profileJsonPath(response, 0, "id");
		//System.out.println(profileUseCaseID);
		JsonPath jp=new JsonPath(response);
		 profileUseCaseID1 = jp.getInt("id[0]");
		System.out.println(profileUseCaseID1);
	
		Assert.assertEquals(res.statusCode(), 200); 
		Assert.assertEquals(usecaseid1, profileUseCaseID1);
		System.out.println("TestCase Success");
	}
	@Test(priority=8,dependsOnMethods= {"RegisterRequest"})
	public void deleteUseCase() {
		Response response = given().log().all().headers("authorization",userid)
        .when().delete("/incidents/"+""+usecaseid1+"").then().assertThat().extract().response();
		Assert.assertEquals(response.statusCode(), 200);
		System.out.println("TestCase Success");
	}
	@Test(priority=9,dependsOnMethods= {"RegisterRequest","deleteUseCase"})
	public void updatedProfileDetails() {
		Response res = 
				given()
				.headers("authorization",userid)
		        .when().get("/profile")
		        .then()
		        .log().all().assertThat()
		        .statusCode(200).extract()
		        .response();
		
		String response = res.asString();
		System.out.println(response);
		
		System.out.println("TestCase Success");
	}
	*/
	
	
}
